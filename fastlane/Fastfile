# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

def build_for_deploygate(app_name: nil, app_identifier: nil, enterprise: nil, development: nil, configuration: nil, xcargs: nil)

  # Xcodeが違う provisioning profile を使わないように
  # フォルダに必要な1つの provisioning profile だけがある状態にする
  sh 'rm -Rf ~/Library/MobileDevice/Provisioning\ Profiles/*'

  clear_derived_data
  xcclean(
    scheme: "Salon",
  )

  update_app_identifier(
    plist_path: "Salon/Application/Info.plist",
    app_identifier: app_identifier,
  )
  update_info_plist(
    plist_path: "Salon/Application/Info.plist",
    display_name: app_name,
  )

  if enterprise
    username = "i-app-enterprise@istyle.co.jp"
    team_id = "FM5AG9TG33"
  else
    username = "s-market@cosme.net"
    team_id = "53KFC48T76"
  end

  if development
    sigh(
      development: true,
      force: true, # ProvisioningProfile更新? 新規device追加時のため
      app_identifier: app_identifier,
      skip_certificate_verification: true, # 証明書が自動で生成されるのを防ぎたい
      username: username,
      team_id: team_id,
    )
  else
    if enterprise
      sigh(
        force: true,
        app_identifier: app_identifier,
        skip_certificate_verification: true, # 証明書が自動で生成されるのを防ぎたい
        username: username,
        team_id: team_id,
      )
    else
      sigh(
        adhoc: true,
        force: true, # ProvisioningProfile更新? 新規device追加時のため
        app_identifier: app_identifier,
        skip_certificate_verification: true, # 証明書が自動で生成されるのを防ぎたい
        username: username,
        team_id: team_id,
      )
    end
  end

  update_project_team(
    teamid: team_id
  )

  # TODO: sandboxのテストは `export_method: "development"` を指定する必要あり
  gym(
    scheme: "Salon",
    configuration: configuration,
    xcargs: xcargs + " DEVELOPMENT_TEAM=" + team_id,
    clean: true,
  )
end

def submit_to_deploygate(message: nil)
  if message.to_s == ''
    message = `git log -20 --merges --pretty=format:"* %b (%ad)" --first-parent --date=format:"%m/%d %a"`
  end
  deploygate(
    user: "i-sys-mt",
    api_token: "fe23d0e62c4e91c41a860cfd073994a567b96c65",
    message: message,
  )
end


################
# All the lanes:
################

platform :ios do

  before_all do
    ENV["FASTLANE_XCODE_LIST_TIMEOUT"] = "600"
    xcode_select "/Applications/Xcode9.3.1.app"
  end

  desc "Submit an in-house app for development to DeployGate"
  lane :inhouse_development do |options|
    build_for_deploygate(
      app_name: "SLN＠dev",
      app_identifier: "jp.co.istyle.Salon.inhouse.development",
      enterprise: true,
      development: false,
      configuration: "Debug",
      xcargs: "-allowProvisioningUpdates",
    )
    if !options[:skip_deploygate]
      submit_to_deploygate(message: options[:message])
    end
  end

  desc "Submit an in-house app for staging to DeployGate"
  lane :inhouse_staging do |options|
    build_for_deploygate(
      app_name: "SLN＠stage",
      app_identifier: "jp.co.istyle.Salon.inhouse.staging",
      enterprise: true,
      development: false,
      configuration: "Staging",
      xcargs: "OTHER_SWIFT_FLAGS='$(inherited) -DSTAGING' -allowProvisioningUpdates",
    )
    if !options[:skip_deploygate]
      submit_to_deploygate(message: options[:message])
    end
  end

end
