swagger: '2.0'
info:
  description: >-
    This is a sample server API for use with the [iOS
    boilerplate](https://github.com/innnovatube/ios-boilerplate).  You can find
    out more about     Swagger at [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: 1.0.0
  title: ios-boilerplate
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: boilerplate.com
basePath: /v1
tags:
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - https
paths:
  /signUp:
    post:
      tags:
        - user
      summary: User sign up
      description: User sign up to create new user
      operationId: signUp
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Body
          required: true
          schema:
            $ref: '#/definitions/SignUpParam'
      responses:
        '200':
          description: Sign up success
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Sign up failed
          schema:
            $ref: '#/definitions/Response'
  /user:
    post:
      security:
        - bearer: []
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          schema:
            $ref: '#/definitions/Response'
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      security:
        - bearer: []
      responses:
        default:
          description: successful operation
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      security:
        - bearer: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    post:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      security:
        - bearer: []
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      security:
        - bearer: []
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
  Response:
    type: object
    properties:
      isSuccess:
        type: boolean
      title:
        type: string
      detail:
        type: string
      status:
        type: integer
      errorCode:
        type: integer
        format: int32
      type:
        type: string
      invalidParams:
        type: array
        items:
          $ref: '#/definitions/Param'
  Param:
    type: object
    properties:
      name:
        type: string
      message:
        type: string
  SignUpParam:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
